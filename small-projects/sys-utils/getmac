#!/bin/bash
#
# Quick script to fetch a MAC address from the ARP table and format it.
#
# Written by W. Reilly Cooley <wcooley@nakedape.cc>
#

VERSION=1.1

# Default format
format=colon
case=lower

usage() {
	cat <<EOF
Usage: $(basename $0) [ -n ] [ -u | -l] [ -f[1234] ] <hostname_or_mac>
Description: Fetches a MAC address from the ARP table and formats it.
Options:
    -n  - Do not collect MAC, just format

    -f1 - Colon-separated format (default)
    -f2 - No separators (Microsoft DHCP/3Com)
    -f3 - Dot-separated triad (Cisco)
    -f4 - Space-separated (SNMP)

    -l  - Hex digits should be lowercase (a-f) (default)
    -u  - Hex digits should be uppercase (A-F)

    -h  - Help
    -V  - Version
EOF
}

if [[ $# -lt 1 ]]; then
    usage
    exit 1
fi


while getopts "nhVf:lu" Opt; do
    case "$Opt" in
        f)
            case "$OPTARG" in
                1)
                    format=colon
                    ;;
                2)
                    format=nosep
                    ;;
                3)
                    format=dottriad
                    ;;
                4)
                    format=space
                    ;;
                ?)
                    printf "Unrecognized format\n" 1>&2
                    exit 1
                    ;;
            esac
            ;;
        l)
            case=lower
            ;;
        u)
            case=upper
            ;;
        n)
            nocollect=1
            ;;
        h)
            usage
            exit
            ;;
        V)
            printf "%s %s\n" "$(basename $0)" "$VERSION"
            exit
            ;;
        ?)
            printf "Unrecognized parameter: %s\n" $1 1>&2
            exit 1
            ;;
    esac
done

shift $(($OPTIND-1))

if [[ -z "$nocollect" ]]; then
    ping -c 1 $1 >/dev/null 2>&1
    mac=$(arp -a $1 | awk "/$1/ { print \$4}")
else
    mac="$1"
fi

case "$format" in
    nosep)
        mac=$(echo "$mac"|sed 's/://g')
        ;;
    dottriad)
        mac=$(echo "$mac"|sed 's/://g; s/\(....\)\(....\)\(....\)/\1.\2.\3/')
        ;;
    space)
        mac=$(echo "$mac"|sed 's/:/ /g')
        ;;
    colon)
        if ! echo "$mac"|grep -q ':'; then
            mac=$(echo "$mac"|sed 's/\(..\)/\1:/g; s/:$//')
        fi
        ;;
esac

case "$case" in
    upper)
        mac=$(echo "$mac"|tr '[[:lower:]]' '[[:upper:]]')
        ;;
    lower)
        mac=$(echo "$mac"|tr '[[:upper:]]' '[[:lower:]]')
        ;;
esac

echo "${mac}"
