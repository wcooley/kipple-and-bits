#!/usr/bin/env ruby
#
# smit-view.rb - QnD script to reformat colon-separated "smit" output
# generated by many AIX commands.
#
# Written by Wil Cooley <wcooley@nakedape.cc>
# Began 16 Jan 2006
# 
require 'optparse'

=begin rdoc
Sets up option parsing
=end
def setup_options()
  opts = OptionParser.new() do |opts|
    opts.banner = <<EOF
Usage: command-smit-output | #{File.basename(__FILE__)}

Reformats "SMIT" output which many AIX commands optionally output into
human-readable output.  "SMIT" output looks like this:

#column1_name:column2_name:column3_name:...
column1_data:column2_data:column3_data:...

For example, 'lsuser -c <username>':

#name:id:pgrp:groups:home:shell:gecos:registry
cooleyw:1782:cooleyw:cooleyw,staff:/home/cooleyw:/usr/bin/ksh:Will R Cooley:compat

And 'lsuser -c <username> | smit-view.rb':

              name: cooleyw
                id: 1782
              pgrp: cooleyw
            groups: cooleyw,staff
              home: /home/cooleyw
             shell: /usr/bin/ksh
             gecos: Will R Cooley
          registry: compat

#####################################################################
EOF
    opts.on_tail("--help", "-h", "Get help") do
      puts opts.to_s
      exit(0)
    end
  end

  return opts
end

if __FILE__ == $0:
  setup_options().parse(ARGV)

  # Initialize
  label = value = []

  # Read and process lines from stdin
  STDIN.each do |line|
    line.chomp!

    next if line =~ /^$/

    if line =~ /^#/:
      line.sub!(/^#/, '')
      label = line.split(':')
    else
      value = line.split(':')

      if not label.empty?:
        puts "" # Newline
        label.each_index do |i|
          printf "%18s: %s\n", label[i], value[i]
        end
        value = []
      end
    end
  end
end

# vim: ft=ruby sw=2 ts=2
