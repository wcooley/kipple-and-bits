#!/usr/bin/perl -w
#
#

use Getopt::Std;

$inetdconf = "/etc/inetd.conf" ;

# Alphabetize!
$options = 'aAc:ghlmpPsuw' ;

unless ( getopts ( $options, \%opts ) ) {
	die "Error processing options" ;
}

if ( $opts{h} == 1 ) {
	print "Display usage:\n" ;
	&display_usage ;
	exit ;
}


&parse_config_file ;



sub parse_config_file {

	$i = 0 ;

	if ( $opt_c ) {
		$inetdconf = $opt_c ;
	}

	open CONFIG, $inetdconf ;

	while (<CONFIG>) {

		chomp $_ ;
		my %hashline ;
		my $status = 0 ;

		# Config line
		if ( $_ =~ /\swait/ ) {
			# Disabled service
			if ( $_ =~ /^#0 / ) {
				$status = "disabled" ;
				$_ =~ s/^#+// ;

			# Odd-ball line: Contains 'wait' but doesn't start with #0
			# Treat the same as comment line
			} elsif ( $_ =~ /^#/ ) {
				$status = "comment" ;
			}
			# Enabled service
			} else {
				$status = "enabled" ;

			}

		# Just a comment line
		} else {
			$status = "comment" ;
		}


		# Handle RPC lines differently
		if ( $_ =~ /rpc\// ) {
			print "DEBUG: rpc line\n" ;
		} else {
			($key, $conftab{$key}->{socket}, 
			$conftab{$key}->{protocol}, 
			$conftab{$key}->{wait}, 
			$conftab{$key}->{user},
			$conftab{$key}->{program},
			$conftab{$key}->{arguments} ) = split (' ',$_);
		}

		foreach $thiskey (sort keys %conftab) {
			print $thiskey, "\n" ;
#			foreach $subkey (sort keys %conftab->{$key}) {
#				print $subkey ;
#			}
		}


		$config[$i++] = 
	}


}


sub display_usage {

	print <<"EOF" ;

lsinet - Lists services.  With no options, lists service names in
columns.

    -l -- Long list; prints table of configured services if not given
          a service name.  If given a service name, prints all
          information about that service.
    -A -- Includes disabled (i.e., commented-out) services
    -c -- Use alternate configuration file
    -s -- Displays socket type
    -p -- Displays protocol
    -w -- Displays wait/nowait options
    -m -- Displays max connections
    -u -- Displays user name which service runs as
    -g -- Displays group name which service runs as
    -P -- Displays program name
    -a -- Displays arguments
    -h -- Displays help

EOF

}
